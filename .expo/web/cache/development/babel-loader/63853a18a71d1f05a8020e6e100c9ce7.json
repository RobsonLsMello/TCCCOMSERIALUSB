{"ast":null,"code":"'use strict';\n\nexport function fullUUID(uuid) {\n  if (uuid.length === 4) return '0000' + uuid.toLowerCase() + '-0000-1000-8000-00805f9b34fb';\n  if (uuid.length === 8) return uuid.toLowerCase() + '-0000-1000-8000-00805f9b34fb';\n  return uuid.toLowerCase();\n}\nexport function fillStringWithArguments(value, object) {\n  return value.replace(/\\{([^}]+)\\}/g, function (_, arg) {\n    return object[arg] || '?';\n  });\n}","map":{"version":3,"names":["fullUUID","uuid","length","toLowerCase","fillStringWithArguments","value","object","replace","_","arg"],"sources":["C:/Users/ROBSONLUCASSILVEIRAM/Documents/tcc/node_modules/react-native-ble-plx/src/Utils.js"],"sourcesContent":["// @flow\n'use strict'\n\nimport type { UUID } from './TypeDefinition'\n\n/**\n * Converts UUID to full 128bit, lowercase format which should be used to compare UUID values.\n *\n * @param {UUID} uuid 16bit, 32bit or 128bit UUID.\n * @returns {UUID} 128bit lowercase UUID.\n */\nexport function fullUUID(uuid: UUID): UUID {\n  if (uuid.length === 4) return '0000' + uuid.toLowerCase() + '-0000-1000-8000-00805f9b34fb'\n  if (uuid.length === 8) return uuid.toLowerCase() + '-0000-1000-8000-00805f9b34fb'\n  return uuid.toLowerCase()\n}\n\nexport function fillStringWithArguments(value: string, object: Object) {\n  return value.replace(/\\{([^}]+)\\}/g, function(_, arg: string) {\n    return object[arg] || '?'\n  })\n}\n"],"mappings":"AACA;;AAUA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAoC;EACzC,IAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB,OAAO,SAASD,IAAI,CAACE,WAAL,EAAT,GAA8B,8BAArC;EACvB,IAAIF,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB,OAAOD,IAAI,CAACE,WAAL,KAAqB,8BAA5B;EACvB,OAAOF,IAAI,CAACE,WAAL,EAAP;AACD;AAED,OAAO,SAASC,uBAAT,CAAiCC,KAAjC,EAAgDC,MAAhD,EAAgE;EACrE,OAAOD,KAAK,CAACE,OAAN,CAAc,cAAd,EAA8B,UAASC,CAAT,EAAYC,GAAZ,EAAyB;IAC5D,OAAOH,MAAM,CAACG,GAAD,CAAN,IAAe,GAAtB;EACD,CAFM,CAAP;AAGD"},"metadata":{},"sourceType":"module"}