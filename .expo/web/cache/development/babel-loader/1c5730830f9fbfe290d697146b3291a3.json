{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport style from \"./css/cadastro\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport controller from \"./../controllers/confirmarEmail\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ConfirmarEmail(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      onChangeCode = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      erros = _useState4[0],\n      setErros = _useState4[1];\n\n  var _ref2 = route.params == undefined ? {\n    email: \"\",\n    origin: \"\"\n  } : route.params,\n      email = _ref2.email,\n      origin = _ref2.origin;\n\n  return _jsx(View, {\n    style: [],\n    children: _jsxs(View, {\n      style: [style.main, style.centerAll],\n      children: [_jsx(Text, {\n        style: style.txtEntrar,\n        children: \"Insira o c\\xF3digo\"\n      }), _jsxs(Text, {\n        style: style.lblInfo,\n        children: [\"Insira o c\\xF3digo que enviamos para o e-mail: \", email]\n      }), _jsx(View, {\n        style: [],\n        children: _jsx(TouchableHighlight, {\n          style: style.btnReenviar,\n          onPress: function onPress() {\n            return controller.reenviar(email, Alert.alert, origin);\n          },\n          children: _jsx(Text, {\n            style: style.txtReenviar,\n            children: \"Reenviar\"\n          })\n        })\n      }), _jsx(TextInput, {\n        style: style.txtSms,\n        placeholder: \"000000\",\n        maxLength: 6,\n        autoComplete: \"cc-number\",\n        keyboardType: \"number-pad\",\n        onChangeText: onChangeCode\n      }), _jsx(View, {\n        style: [],\n        children: _jsx(TouchableHighlight, {\n          style: style.btnReenviar,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: style.lblMudarContato,\n            children: \"Mudar Contato\"\n          })\n        })\n      }), _jsx(TouchableHighlight, {\n        style: style.btnCadastrar,\n        onPress: function onPress() {\n          return controller.confirmarEmail(email, code, setErros, navigation, origin, AsyncStorage);\n        },\n        children: _jsx(Text, {\n          style: style.txtEntrarBtnCadastrar,\n          children: \"Confirmar C\\xF3digo\"\n        })\n      }), _jsx(Text, {\n        style: [style.lblInfo, erros != \"\" ? style.lblErro : null],\n        children: erros\n      })]\n    })\n  });\n}\n\nexport default ConfirmarEmail;","map":{"version":3,"names":["React","useState","style","AsyncStorage","controller","ConfirmarEmail","route","navigation","code","onChangeCode","erros","setErros","params","undefined","email","origin","main","centerAll","txtEntrar","lblInfo","btnReenviar","reenviar","Alert","alert","txtReenviar","txtSms","goBack","lblMudarContato","btnCadastrar","confirmarEmail","txtEntrarBtnCadastrar","lblErro"],"sources":["C:/Users/ROBSONLUCASSILVEIRAM/Documents/tcc/src/views/confirmarEmail.js"],"sourcesContent":["import * as React from 'react';\nimport { useState } from \"react\";\nimport { Text, View,TextInput, TouchableHighlight, Alert } from 'react-native';\n\nimport style from './css/cadastro'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport controller from './../controllers/confirmarEmail'\n\n\nfunction ConfirmarEmail({route, navigation}){\n  const [code, onChangeCode] = useState(\"\");\n  const [erros, setErros] = useState(\"\");\n  const {email, origin} = route.params == undefined ? {email:\"\", origin:\"\"} : route.params;\n\n\n    return(\n  <View style={[]}> \n    <View style={[style.main, style.centerAll]}> \n\n      <Text style={style.txtEntrar}>Insira o código</Text>\n      <Text style={style.lblInfo}>\n        Insira o código que enviamos para o e-mail: {email}\n      </Text>\n      <View style={[]}>\n        <TouchableHighlight style={style.btnReenviar}\n          onPress={() => controller.reenviar(email, Alert.alert, origin)}>\n          <Text style={style.txtReenviar}>Reenviar</Text>\n        </TouchableHighlight>\n      </View>\n      \n      <TextInput style={style.txtSms} placeholder=\"000000\" maxLength={6} autoComplete='cc-number' keyboardType='number-pad' onChangeText={onChangeCode}></TextInput>\n      \n      <View style={[]}>\n        <TouchableHighlight style={style.btnReenviar}\n          onPress={() => navigation.goBack()}>\n          <Text style={style.lblMudarContato}>Mudar Contato</Text>\n        </TouchableHighlight>\n      </View>\n\n      <TouchableHighlight style={style.btnCadastrar}\n        onPress={() => controller.confirmarEmail(email, code, setErros, navigation, origin, AsyncStorage)}>\n        <Text style={style.txtEntrarBtnCadastrar}>Confirmar Código</Text>\n      </TouchableHighlight>\n      <Text style={[style.lblInfo, erros != \"\" ? style.lblErro : null]}>\n        {erros}\n      </Text>\n    </View>\n\n  </View>\n  )\n}\n\n\n\nexport default ConfirmarEmail"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;;;AAGA,OAAOC,KAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,UAAP;;;;AAGA,SAASC,cAAT,OAA4C;EAAA,IAAnBC,KAAmB,QAAnBA,KAAmB;EAAA,IAAZC,UAAY,QAAZA,UAAY;;EAC1C,gBAA6BN,QAAQ,CAAC,EAAD,CAArC;EAAA;EAAA,IAAOO,IAAP;EAAA,IAAaC,YAAb;;EACA,iBAA0BR,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EACA,YAAwBL,KAAK,CAACM,MAAN,IAAgBC,SAAhB,GAA4B;IAACC,KAAK,EAAC,EAAP;IAAWC,MAAM,EAAC;EAAlB,CAA5B,GAAoDT,KAAK,CAACM,MAAlF;EAAA,IAAOE,KAAP,SAAOA,KAAP;EAAA,IAAcC,MAAd,SAAcA,MAAd;;EAGE,OACF,KAAC,IAAD;IAAM,KAAK,EAAE,EAAb;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAE,CAACb,KAAK,CAACc,IAAP,EAAad,KAAK,CAACe,SAAnB,CAAb;MAAA,WAEE,KAAC,IAAD;QAAM,KAAK,EAAEf,KAAK,CAACgB,SAAnB;QAAA;MAAA,EAFF,EAGE,MAAC,IAAD;QAAM,KAAK,EAAEhB,KAAK,CAACiB,OAAnB;QAAA,8DAC+CL,KAD/C;MAAA,EAHF,EAME,KAAC,IAAD;QAAM,KAAK,EAAE,EAAb;QAAA,UACE,KAAC,kBAAD;UAAoB,KAAK,EAAEZ,KAAK,CAACkB,WAAjC;UACE,OAAO,EAAE;YAAA,OAAMhB,UAAU,CAACiB,QAAX,CAAoBP,KAApB,EAA2BQ,KAAK,CAACC,KAAjC,EAAwCR,MAAxC,CAAN;UAAA,CADX;UAAA,UAEE,KAAC,IAAD;YAAM,KAAK,EAAEb,KAAK,CAACsB,WAAnB;YAAA;UAAA;QAFF;MADF,EANF,EAaE,KAAC,SAAD;QAAW,KAAK,EAAEtB,KAAK,CAACuB,MAAxB;QAAgC,WAAW,EAAC,QAA5C;QAAqD,SAAS,EAAE,CAAhE;QAAmE,YAAY,EAAC,WAAhF;QAA4F,YAAY,EAAC,YAAzG;QAAsH,YAAY,EAAEhB;MAApI,EAbF,EAeE,KAAC,IAAD;QAAM,KAAK,EAAE,EAAb;QAAA,UACE,KAAC,kBAAD;UAAoB,KAAK,EAAEP,KAAK,CAACkB,WAAjC;UACE,OAAO,EAAE;YAAA,OAAMb,UAAU,CAACmB,MAAX,EAAN;UAAA,CADX;UAAA,UAEE,KAAC,IAAD;YAAM,KAAK,EAAExB,KAAK,CAACyB,eAAnB;YAAA;UAAA;QAFF;MADF,EAfF,EAsBE,KAAC,kBAAD;QAAoB,KAAK,EAAEzB,KAAK,CAAC0B,YAAjC;QACE,OAAO,EAAE;UAAA,OAAMxB,UAAU,CAACyB,cAAX,CAA0Bf,KAA1B,EAAiCN,IAAjC,EAAuCG,QAAvC,EAAiDJ,UAAjD,EAA6DQ,MAA7D,EAAqEZ,YAArE,CAAN;QAAA,CADX;QAAA,UAEE,KAAC,IAAD;UAAM,KAAK,EAAED,KAAK,CAAC4B,qBAAnB;UAAA;QAAA;MAFF,EAtBF,EA0BE,KAAC,IAAD;QAAM,KAAK,EAAE,CAAC5B,KAAK,CAACiB,OAAP,EAAgBT,KAAK,IAAI,EAAT,GAAcR,KAAK,CAAC6B,OAApB,GAA8B,IAA9C,CAAb;QAAA,UACGrB;MADH,EA1BF;IAAA;EADF,EADE;AAmCH;;AAID,eAAeL,cAAf"},"metadata":{},"sourceType":"module"}