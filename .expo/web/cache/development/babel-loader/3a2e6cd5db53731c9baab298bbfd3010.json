{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar usuario = require(\"../modal/Usuario\");\n\nexports.verificarEmail = function _callee(email, nav, setErros) {\n  var mensagem, mensagemErro;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(usuario.verificarEmail(email));\n\n        case 2:\n          mensagem = _context.sent;\n          console.log(mensagem);\n\n          if (!(Array.isArray(mensagem.mensagem) || mensagem.error != undefined)) {\n            _context.next = 11;\n            break;\n          }\n\n          mensagemErro = \"\";\n\n          if (mensagem.error == undefined) {\n            mensagemErro = mensagem.mensagem.map(function (element) {\n              return element + \"\\n\";\n            });\n          } else {\n            mensagemErro = mensagem.error;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(setErros(mensagemErro));\n\n        case 9:\n          _context.next = 12;\n          break;\n\n        case 11:\n          nav.navigate(\"confirmarEmail\", {\n            email: email,\n            origin: \"login\"\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["usuario","require","exports","verificarEmail","email","nav","setErros","mensagem","console","log","Array","isArray","error","undefined","mensagemErro","map","element","navigate","origin"],"sources":["C:/Users/ROBSONLUCASSILVEIRAM/Documents/tcc/src/controllers/login.js"],"sourcesContent":["const usuario = require('../modal/Usuario')\r\n\r\nexports.verificarEmail = async (email, nav, setErros) =>{\r\n    let mensagem =  await usuario.verificarEmail(email)\r\n    console.log(mensagem);\r\n    if(Array.isArray(mensagem.mensagem) || mensagem.error != undefined){\r\n        let mensagemErro = \"\";\r\n        if(mensagem.error == undefined){\r\n            mensagemErro = mensagem.mensagem.map(element =>{\r\n                return `${element}\\n`;\r\n            })\r\n        }else{\r\n            mensagemErro = mensagem.error;\r\n        }\r\n        await setErros(mensagemErro);\r\n    }else{\r\n        nav.navigate(\"confirmarEmail\", {email: email, origin: \"login\"})\r\n    }\r\n}"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,oBAAvB;;AAEAC,OAAO,CAACC,cAAR,GAAyB,iBAAOC,KAAP,EAAcC,GAAd,EAAmBC,QAAnB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACCN,OAAO,CAACG,cAAR,CAAuBC,KAAvB,CADD;;QAAA;UACjBG,QADiB;UAErBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;;UAFqB,MAGlBG,KAAK,CAACC,OAAN,CAAcJ,QAAQ,CAACA,QAAvB,KAAoCA,QAAQ,CAACK,KAAT,IAAkBC,SAHpC;YAAA;YAAA;UAAA;;UAIbC,YAJa,GAIE,EAJF;;UAKjB,IAAGP,QAAQ,CAACK,KAAT,IAAkBC,SAArB,EAA+B;YAC3BC,YAAY,GAAGP,QAAQ,CAACA,QAAT,CAAkBQ,GAAlB,CAAsB,UAAAC,OAAO,EAAG;cAC3C,OAAUA,OAAV;YACH,CAFc,CAAf;UAGH,CAJD,MAIK;YACDF,YAAY,GAAGP,QAAQ,CAACK,KAAxB;UACH;;UAXgB;UAAA,iCAYXN,QAAQ,CAACQ,YAAD,CAZG;;QAAA;UAAA;UAAA;;QAAA;UAcjBT,GAAG,CAACY,QAAJ,CAAa,gBAAb,EAA+B;YAACb,KAAK,EAAEA,KAAR;YAAec,MAAM,EAAE;UAAvB,CAA/B;;QAdiB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAzB"},"metadata":{},"sourceType":"script"}