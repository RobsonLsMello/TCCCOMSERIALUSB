{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar domain = \"https://deep-analysis02.herokuapp.com\";\n\nvar token = require(\"./Token\");\n\nexports.cadastrarEmail = function _callee(email) {\n  var myHeaders, raw, requestOptions, response, retorno;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            \"email\": email\n          });\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(domain + \"/user/cadEmail\", requestOptions));\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          retorno = _context.sent;\n          return _context.abrupt(\"return\", retorno);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.confirmarEmail = function _callee2(email, code) {\n  var myHeaders, raw, requestOptions, response, retorno;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            \"email\": email,\n            \"code\": code\n          });\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(fetch(domain + \"/user/verifyCode\", requestOptions));\n\n        case 6:\n          response = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          retorno = _context2.sent;\n          return _context2.abrupt(\"return\", retorno);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.verificarEmail = function _callee3(email) {\n  var myHeaders, raw, requestOptions, response, retorno;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            \"email\": email\n          });\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(fetch(domain + \"/user/sendVerifCode\", requestOptions));\n\n        case 6:\n          response = _context3.sent;\n          _context3.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          retorno = _context3.sent;\n          return _context3.abrupt(\"return\", retorno);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.informarDados = function _callee4(nome, telefone, AsyncStorage) {\n  var token_id, myHeaders, raw, requestOptions, response, retorno;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(token.refreshToken(AsyncStorage));\n\n        case 2:\n          token_id = _context4.sent;\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          myHeaders.append(\"Authorization\", \"Bearer \" + token_id);\n          raw = JSON.stringify({\n            \"nameUser\": nome,\n            \"phone\": telefone\n          });\n          requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          _context4.next = 10;\n          return _regeneratorRuntime.awrap(fetch(domain + \"/user/nameAndPhone\", requestOptions));\n\n        case 10:\n          response = _context4.sent;\n          _context4.next = 13;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 13:\n          retorno = _context4.sent;\n          return _context4.abrupt(\"return\", retorno);\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.atualizarNotificacoes = function _callee5(notifyInitBathymetry, notifyEndBathymetry, notifyObstacle, storage) {\n  var token_id, myHeaders, raw, requestOptions, response, retorno;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(token.refreshToken(storage));\n\n        case 2:\n          token_id = _context5.sent;\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          myHeaders.append(\"Authorization\", \"Bearer \" + token_id);\n          raw = JSON.stringify({\n            \"notifyInitBathymetry\": notifyInitBathymetry,\n            \"notifyEndBathymetry\": notifyEndBathymetry,\n            \"notifyObstacle\": notifyObstacle\n          });\n          requestOptions = {\n            method: 'PATCH',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          _context5.next = 10;\n          return _regeneratorRuntime.awrap(fetch(domain + \"/user/cadUserEspec\", requestOptions));\n\n        case 10:\n          response = _context5.sent;\n          _context5.next = 13;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 13:\n          retorno = _context5.sent;\n          return _context5.abrupt(\"return\", retorno);\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["domain","token","require","exports","cadastrarEmail","email","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","response","json","retorno","confirmarEmail","code","verificarEmail","informarDados","nome","telefone","AsyncStorage","refreshToken","token_id","atualizarNotificacoes","notifyInitBathymetry","notifyEndBathymetry","notifyObstacle","storage"],"sources":["C:/Users/ROBSONLUCASSILVEIRAM/Documents/tcc/src/modal/Usuario.js"],"sourcesContent":["\r\nconst domain = \"https://deep-analysis02.herokuapp.com\";\r\nconst token = require('./Token')\r\n\r\nexports.cadastrarEmail = async (email) =>{\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  var raw = JSON.stringify({\r\n    \"email\": email\r\n  });\r\n\r\n  var requestOptions = {\r\n    method: 'POST',    headers: myHeaders,    body: raw,    redirect: 'follow'\r\n  };\r\n\r\n  const response = await fetch(`${domain}/user/cadEmail`, requestOptions)\r\n  const retorno = await response.json();\r\n  return retorno;\r\n}\r\n\r\nexports.confirmarEmail = async (email, code) =>{  \r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  var raw = JSON.stringify({\r\n    \"email\" : email,\r\n    \"code\"  : code\r\n  });\r\n\r\n  var requestOptions = {\r\n    method: 'POST',    headers: myHeaders,    body: raw,    redirect: 'follow'\r\n  };\r\n\r\n  const response = await fetch(`${domain}/user/verifyCode`, requestOptions)\r\n  const retorno = await response.json();\r\n  return retorno;\r\n}\r\n\r\nexports.verificarEmail = async (email) =>{  \r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  var raw = JSON.stringify({\r\n    \"email\" : email\r\n  });\r\n\r\n  var requestOptions = {\r\n    method: 'POST',    headers: myHeaders,    body: raw,    redirect: 'follow'\r\n  };\r\n\r\n  const response = await fetch(`${domain}/user/sendVerifCode`, requestOptions)\r\n  const retorno = await response.json();\r\n  return retorno;\r\n}\r\n\r\nexports.informarDados = async (nome, telefone, AsyncStorage) =>{\r\n  let token_id = await token.refreshToken(AsyncStorage);\r\n  var myHeaders = new Headers();\r\n\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  myHeaders.append(\"Authorization\", `Bearer ${token_id}`);\r\n\r\n  var raw = JSON.stringify({\r\n    \"nameUser\": nome,\r\n    \"phone\"   : telefone\r\n\r\n  });\r\n\r\n  var requestOptions = {\r\n    method: 'PATCH',    headers: myHeaders,    body: raw,    redirect: 'follow'\r\n  };\r\n\r\n  const response = await fetch(`${domain}/user/nameAndPhone`, requestOptions)\r\n  const retorno = await response.json();\r\n  return retorno;\r\n}\r\n\r\nexports.atualizarNotificacoes = async (notifyInitBathymetry, notifyEndBathymetry, notifyObstacle, storage) =>{\r\n  let token_id = await token.refreshToken(storage);\r\n  var myHeaders = new Headers();\r\n  \r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  myHeaders.append(\"Authorization\", `Bearer ${token_id}`);\r\n\r\n  var raw = JSON.stringify({\r\n    \"notifyInitBathymetry\": notifyInitBathymetry,\r\n    \"notifyEndBathymetry\" : notifyEndBathymetry,\r\n    \"notifyObstacle\"      : notifyObstacle\r\n\r\n  });\r\n\r\n  var requestOptions = {\r\n    method: 'PATCH',    headers: myHeaders,    body: raw,    redirect: 'follow'\r\n  };\r\n\r\n  const response = await fetch(`${domain}/user/cadUserEspec`, requestOptions)\r\n  const retorno = await response.json();\r\n  return retorno;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}