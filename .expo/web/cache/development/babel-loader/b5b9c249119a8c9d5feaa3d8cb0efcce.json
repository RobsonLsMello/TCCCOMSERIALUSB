{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar domain = \"https://deep-analysis02.herokuapp.com\";\n\nvar token = require(\"./Token\");\n\nexports.cadastrarRota = function _callee(lt, rt, lb, rb, AsyncStorage) {\n  var token_id, myHeaders, raw, requestOptions, response, retorno;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(token.refreshToken(AsyncStorage));\n\n        case 2:\n          token_id = _context.sent;\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          myHeaders.append(\"Authorization\", \"Bearer \" + token_id);\n          raw = JSON.stringify({\n            \"lt\": {\n              \"type\": \"Point\",\n              \"coordinates\": lt\n            },\n            \"rt\": {\n              \"type\": \"Point\",\n              \"coordinates\": rt\n            },\n            \"lb\": {\n              \"type\": \"Point\",\n              \"coordinates\": lb\n            },\n            \"rb\": {\n              \"type\": \"Point\",\n              \"coordinates\": rb\n            },\n            \"name\": \"Trajeto-\" + Math.round(Math.random() * 100000)\n          });\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fetch(domain + \"/route/cadRoute\", requestOptions));\n\n        case 10:\n          response = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 13:\n          retorno = _context.sent;\n          return _context.abrupt(\"return\", retorno);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.selecionarRota = function _callee2(AsyncStorage) {\n  var id,\n      token_id,\n      myHeaders,\n      requestOptions,\n      response,\n      retorno,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : \"\";\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(token.refreshToken(AsyncStorage));\n\n        case 3:\n          token_id = _context2.sent;\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          myHeaders.append(\"Authorization\", \"Bearer \" + token_id);\n          requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n          };\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(fetch(domain + \"/route/\" + (id == \"\" ? \"getAllRoutes\" : id), requestOptions));\n\n        case 10:\n          response = _context2.sent;\n          _context2.next = 13;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 13:\n          retorno = _context2.sent;\n          return _context2.abrupt(\"return\", retorno);\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["domain","token","require","exports","cadastrarRota","lt","rt","lb","rb","AsyncStorage","refreshToken","token_id","myHeaders","Headers","append","raw","JSON","stringify","Math","round","random","requestOptions","method","headers","body","redirect","fetch","response","json","retorno","selecionarRota","id"],"sources":["C:/Users/ROBSONLUCASSILVEIRAM/Documents/tcc/src/modal/Rota.js"],"sourcesContent":["const domain = \"https://deep-analysis02.herokuapp.com\";\r\nconst token = require('./Token')\r\n\r\nexports.cadastrarRota = async (lt, rt, lb, rb, AsyncStorage) =>{\r\n    let token_id = await token.refreshToken(AsyncStorage);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", `Bearer ${token_id}`);\r\n  \r\n    var raw = JSON.stringify({\r\n        \"lt\":{\r\n            \"type\":\"Point\",\r\n            \"coordinates\": lt\r\n            },\r\n        \"rt\":{\r\n            \"type\":\"Point\",\r\n            \"coordinates\": rt\r\n            },\r\n        \"lb\":{\r\n            \"type\":\"Point\",\r\n            \"coordinates\": lb\r\n            },\r\n        \"rb\":{\r\n            \"type\":\"Point\",\r\n            \"coordinates\":rb\r\n            },\r\n        \"name\":`Trajeto-${Math.round(Math.random() *100000)}`\r\n    });\r\n  \r\n    var requestOptions = {\r\n      method: 'POST',    headers: myHeaders,    body: raw,    redirect: 'follow'\r\n    };\r\n  \r\n    const response = await fetch(`${domain}/route/cadRoute`, requestOptions)\r\n    \r\n    const retorno = await response.json();\r\n    return retorno;\r\n}\r\n\r\n/**\r\n * @description Função para selecionar uma ou todas as rotas já criadas\r\n * @param {*} AsyncStorage \r\n * @param {*} id \r\n * @returns Se id for vázio irá retornar todas as rotas, senão buscará uma em especifico\r\n */\r\nexports.selecionarRota = async (AsyncStorage, id = \"\") =>{\r\n    let token_id = await token.refreshToken(AsyncStorage);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", `Bearer ${token_id}`);\r\n\r\n    var requestOptions = {\r\n      method: 'GET',    headers: myHeaders,      redirect: 'follow'\r\n    };\r\n    \r\n    const response = await fetch(`${domain}/route/${id == \"\" ? \"getAllRoutes\" : id}`, requestOptions)\r\n    const retorno = await response.json();\r\n    return retorno;\r\n}\r\n\r\n"],"mappings":";;AAAA,IAAMA,MAAM,GAAG,uCAAf;;AACA,IAAMC,KAAK,GAAGC,OAAO,WAArB;;AAEAC,OAAO,CAACC,aAAR,GAAwB,iBAAOC,EAAP,EAAWC,EAAX,EAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,YAAvB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACCR,KAAK,CAACS,YAAN,CAAmBD,YAAnB,CADD;;QAAA;UAChBE,QADgB;UAEhBC,SAFgB,GAEJ,IAAIC,OAAJ,EAFI;UAGpBD,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;UACAF,SAAS,CAACE,MAAV,CAAiB,eAAjB,cAA4CH,QAA5C;UAEII,GANgB,GAMVC,IAAI,CAACC,SAAL,CAAe;YACrB,MAAK;cACD,QAAO,OADN;cAED,eAAeZ;YAFd,CADgB;YAKrB,MAAK;cACD,QAAO,OADN;cAED,eAAeC;YAFd,CALgB;YASrB,MAAK;cACD,QAAO,OADN;cAED,eAAeC;YAFd,CATgB;YAarB,MAAK;cACD,QAAO,OADN;cAED,eAAcC;YAFb,CAbgB;YAiBrB,qBAAkBU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAe,MAA1B;UAjBG,CAAf,CANU;UA0BhBC,cA1BgB,GA0BC;YACnBC,MAAM,EAAE,MADW;YACAC,OAAO,EAAEX,SADT;YACuBY,IAAI,EAAET,GAD7B;YACqCU,QAAQ,EAAE;UAD/C,CA1BD;UAAA;UAAA,iCA8BGC,KAAK,CAAI1B,MAAJ,sBAA6BqB,cAA7B,CA9BR;;QAAA;UA8BdM,QA9Bc;UAAA;UAAA,iCAgCEA,QAAQ,CAACC,IAAT,EAhCF;;QAAA;UAgCdC,OAhCc;UAAA,iCAiCbA,OAjCa;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAxB;;AA0CA1B,OAAO,CAAC2B,cAAR,GAAyB,kBAAOrB,YAAP;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UAAqBsB,EAArB,8DAA0B,EAA1B;UAAA;UAAA,iCACA9B,KAAK,CAACS,YAAN,CAAmBD,YAAnB,CADA;;QAAA;UACjBE,QADiB;UAEjBC,SAFiB,GAEL,IAAIC,OAAJ,EAFK;UAGrBD,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;UACAF,SAAS,CAACE,MAAV,CAAiB,eAAjB,cAA4CH,QAA5C;UAEIU,cANiB,GAMA;YACnBC,MAAM,EAAE,KADW;YACDC,OAAO,EAAEX,SADR;YACwBa,QAAQ,EAAE;UADlC,CANA;UAAA;UAAA,iCAUEC,KAAK,CAAI1B,MAAJ,gBAAoB+B,EAAE,IAAI,EAAN,GAAW,cAAX,GAA4BA,EAAhD,GAAsDV,cAAtD,CAVP;;QAAA;UAUfM,QAVe;UAAA;UAAA,iCAWCA,QAAQ,CAACC,IAAT,EAXD;;QAAA;UAWfC,OAXe;UAAA,kCAYdA,OAZc;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAzB"},"metadata":{},"sourceType":"script"}