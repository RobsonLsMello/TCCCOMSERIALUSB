{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport vars from \"../css/vars\";\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function opcaoNavbar(props) {\n  var nav = props.nav;\n  var screen = props.screen;\n\n  var changeScreen = function changeScreen() {\n    if (screen == \"controle\") {\n      (function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.DEFAULT));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    } else {\n      (function _callee2() {\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n\n    nav.navigate(screen);\n  };\n\n  return _jsx(Pressable, {\n    onPress: changeScreen,\n    children: _jsxs(View, {\n      style: styles.opcao,\n      children: [_jsx(Image, {\n        style: styles.imgOpcao,\n        source: props.image\n      }), _jsx(Text, {\n        style: [styles.lblOpcao, props.ativo ? {\n          color: vars.primaryColor\n        } : null],\n        children: props.opcao\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  opcao: {\n    alignItems: \"center\"\n  },\n  imgOpcao: {\n    width: vars.height * (32 / 926),\n    height: vars.height * (32 / 926)\n  },\n  lblOpcao: {\n    color: \"#929292\",\n    fontSize: vars.fontS,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useState","vars","ScreenOrientation","opcaoNavbar","props","nav","screen","changeScreen","lockAsync","OrientationLock","DEFAULT","PORTRAIT","navigate","styles","opcao","imgOpcao","image","lblOpcao","ativo","color","primaryColor","StyleSheet","create","alignItems","width","height","fontSize","fontS","fontWeight"],"sources":["C:/Users/ROBSONLUCASSILVEIRAM/Documents/tcc/src/views/components/opcaoNavbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, Pressable, View, Image } from 'react-native';\nimport vars from '../css/vars';\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\nexport default function opcaoNavbar(props) {\n  const nav = props.nav;\n  const screen = props.screen;\n  var changeScreen = () =>{\n    if(screen == \"controle\"){\n      (async () => {\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.DEFAULT)\n      })();\n    }else{\n      (async () => {\n          await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT)\n      })();\n    }\n    nav.navigate(screen);\n  }\n  return (\n      <Pressable onPress={changeScreen}>\n        <View style={styles.opcao}>\n          <Image\n            style={styles.imgOpcao}\n            source={props.image}\n          />\n          <Text style={[styles.lblOpcao, props.ativo ? {color: vars.primaryColor} : null]}>{props.opcao}</Text>\n        </View>\n      </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  opcao:{\n    alignItems:\"center\"\n  },\n  imgOpcao:{\n    width: vars.height * (32/926),\n    height: vars.height * (32/926),\n  },\n  lblOpcao:{\n    color: \"#929292\",\n    fontSize:vars.fontS,\n    fontWeight:\"bold\"\n  }\n});\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,IAAP;AACA,OAAO,KAAKC,iBAAZ,MAAmC,yBAAnC;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EACzC,IAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;EACA,IAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;;EACA,IAAIC,YAAY,GAAG,SAAfA,YAAe,GAAK;IACtB,IAAGD,MAAM,IAAI,UAAb,EAAwB;MACtB,CAAC;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,iCACOJ,iBAAiB,CAACM,SAAlB,CAA4BN,iBAAiB,CAACO,eAAlB,CAAkCC,OAA9D,CADP;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAD;IAGD,CAJD,MAIK;MACH,CAAC;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,iCACSR,iBAAiB,CAACM,SAAlB,CAA4BN,iBAAiB,CAACO,eAAlB,CAAkCE,QAA9D,CADT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAD;IAGD;;IACDN,GAAG,CAACO,QAAJ,CAAaN,MAAb;EACD,CAXD;;EAYA,OACI,KAAC,SAAD;IAAW,OAAO,EAAEC,YAApB;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEM,MAAM,CAACC,KAApB;MAAA,WACE,KAAC,KAAD;QACE,KAAK,EAAED,MAAM,CAACE,QADhB;QAEE,MAAM,EAAEX,KAAK,CAACY;MAFhB,EADF,EAKE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACH,MAAM,CAACI,QAAR,EAAkBb,KAAK,CAACc,KAAN,GAAc;UAACC,KAAK,EAAElB,IAAI,CAACmB;QAAb,CAAd,GAA2C,IAA7D,CAAb;QAAA,UAAkFhB,KAAK,CAACU;MAAxF,EALF;IAAA;EADF,EADJ;AAWD;AAED,IAAMD,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BR,KAAK,EAAC;IACJS,UAAU,EAAC;EADP,CADyB;EAI/BR,QAAQ,EAAC;IACPS,KAAK,EAAEvB,IAAI,CAACwB,MAAL,IAAe,KAAG,GAAlB,CADA;IAEPA,MAAM,EAAExB,IAAI,CAACwB,MAAL,IAAe,KAAG,GAAlB;EAFD,CAJsB;EAQ/BR,QAAQ,EAAC;IACPE,KAAK,EAAE,SADA;IAEPO,QAAQ,EAACzB,IAAI,CAAC0B,KAFP;IAGPC,UAAU,EAAC;EAHJ;AARsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}