{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar deep = require(\"../modal/Deep\");\n\nvar dadosSalvos = [];\n\nexports.executarBatimetria = function _callee(bluetoothDevice, setInBatimetria, setProfundidade, setTempoBatimetria, setBatimetriaFinalizada) {\n  var z, y, x, mili, simulacao;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          dadosSalvos = [];\n          setInBatimetria(true);\n          z = 0, y = 0, x = 0;\n          mili = 0;\n          simulacao = setInterval(function () {\n            mili += 0.1;\n            setTempoBatimetria(Math.floor(mili / 60) + \"m\" + Math.floor(mili % 60) + \"s\");\n            y = -(x * x / 4) + 25 * x;\n            setProfundidade(y);\n            dadosSalvos.push({\n              latitude: z,\n              longitude: x,\n              profundidade: y,\n              unidade: \"metros\"\n            });\n            console.log({\n              latitude: z,\n              longitude: x,\n              profundidade: y,\n              unidade: \"metros\"\n            });\n            x++;\n\n            if (x > 100) {\n              z++;\n              x = 0;\n            }\n\n            if (z > 0) {\n              clearInterval(simulacao);\n              setBatimetriaFinalizada(true);\n            }\n          }, 100);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.salvarBatimetria = function _callee2(trajeto, AsyncStorage, setTempoBatimetria, setBatimetriaFinalizada, setInBatimetria) {\n  var lenght, indice, loop;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          lenght = dadosSalvos.length;\n          indice = 0;\n          loop = setInterval(function () {\n            deep.cadastrarDeep([dados[indice].latitude, dados[indice].longitude], trajeto, dados[indice].profundidade, AsyncStorage);\n\n            if (indice <= lenght) {\n              indice++;\n            } else {\n              clearInterval(loop);\n            }\n          }, 500);\n          setTempoBatimetria(\"0m0s\");\n          setBatimetriaFinalizada(false);\n          setInBatimetria(false);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["deep","require","dadosSalvos","exports","executarBatimetria","bluetoothDevice","setInBatimetria","setProfundidade","setTempoBatimetria","setBatimetriaFinalizada","z","y","x","mili","simulacao","setInterval","Math","floor","push","latitude","longitude","profundidade","unidade","console","log","clearInterval","salvarBatimetria","trajeto","AsyncStorage","lenght","length","indice","loop","cadastrarDeep","dados"],"sources":["C:/Users/ROBSONLUCASSILVEIRAM/Documents/tcc/src/controllers/main.js"],"sourcesContent":["const deep = require('../modal/Deep')\r\nvar dadosSalvos = []\r\n\r\nexports.executarBatimetria = async (bluetoothDevice,  setInBatimetria, setProfundidade, setTempoBatimetria, setBatimetriaFinalizada) =>{  \r\n    dadosSalvos = [];\r\n    setInBatimetria(true); \r\n    /* Simulação */\r\n    let z=0,y=0,x=0;\r\n    let mili = 0;\r\n    let simulacao = setInterval( () => {\r\n        mili += 0.1;\r\n        setTempoBatimetria(`${Math.floor(mili/60)}m${Math.floor(mili % 60)}s`);\r\n        y = -((x*x)/4)+(25*x);\r\n        setProfundidade(y);\r\n        dadosSalvos.push(\r\n            {latitude:z, longitude:x, profundidade: y, unidade:\"metros\"}\r\n        );\r\n        console.log({latitude:z, longitude:x, profundidade: y, unidade:\"metros\"})\r\n        x++;\r\n        if(x>100){\r\n            z++;\r\n            x=0;\r\n        }\r\n        if(z> 0){\r\n            clearInterval(simulacao)  \r\n            setBatimetriaFinalizada(true);\r\n            \r\n        }\r\n        \r\n    }, 100);\r\n    \r\n}\r\n\r\nexports.salvarBatimetria = async (trajeto, AsyncStorage, setTempoBatimetria, setBatimetriaFinalizada, setInBatimetria) =>{\r\n    let lenght = dadosSalvos.length;\r\n    let indice = 0;\r\n    let loop = setInterval(() => {\r\n        deep.cadastrarDeep([dados[indice].latitude, dados[indice].longitude], trajeto, dados[indice].profundidade, AsyncStorage);\r\n        if(indice <= lenght){\r\n            indice++;\r\n        }\r\n        else{\r\n            clearInterval(loop);\r\n        }\r\n    }, 500);\r\n \r\n    setTempoBatimetria(\"0m0s\");\r\n    setBatimetriaFinalizada(false);\r\n    setInBatimetria(false);\r\n}"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,iBAApB;;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEAC,OAAO,CAACC,kBAAR,GAA6B,iBAAOC,eAAP,EAAyBC,eAAzB,EAA0CC,eAA1C,EAA2DC,kBAA3D,EAA+EC,uBAA/E;EAAA;EAAA;IAAA;MAAA;QAAA;UACzBP,WAAW,GAAG,EAAd;UACAI,eAAe,CAAC,IAAD,CAAf;UAEII,CAJqB,GAInB,CAJmB,EAIjBC,CAJiB,GAIf,CAJe,EAIbC,CAJa,GAIX,CAJW;UAKrBC,IALqB,GAKd,CALc;UAMrBC,SANqB,GAMTC,WAAW,CAAE,YAAM;YAC/BF,IAAI,IAAI,GAAR;YACAL,kBAAkB,CAAIQ,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAC,EAAhB,CAAJ,SAA2BG,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,CAA3B,OAAlB;YACAF,CAAC,GAAG,EAAGC,CAAC,GAACA,CAAH,GAAM,CAAR,IAAY,KAAGA,CAAnB;YACAL,eAAe,CAACI,CAAD,CAAf;YACAT,WAAW,CAACgB,IAAZ,CACI;cAACC,QAAQ,EAACT,CAAV;cAAaU,SAAS,EAACR,CAAvB;cAA0BS,YAAY,EAAEV,CAAxC;cAA2CW,OAAO,EAAC;YAAnD,CADJ;YAGAC,OAAO,CAACC,GAAR,CAAY;cAACL,QAAQ,EAACT,CAAV;cAAaU,SAAS,EAACR,CAAvB;cAA0BS,YAAY,EAAEV,CAAxC;cAA2CW,OAAO,EAAC;YAAnD,CAAZ;YACAV,CAAC;;YACD,IAAGA,CAAC,GAAC,GAAL,EAAS;cACLF,CAAC;cACDE,CAAC,GAAC,CAAF;YACH;;YACD,IAAGF,CAAC,GAAE,CAAN,EAAQ;cACJe,aAAa,CAACX,SAAD,CAAb;cACAL,uBAAuB,CAAC,IAAD,CAAvB;YAEH;UAEJ,CApB0B,EAoBxB,GApBwB,CANF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA7B;;AA8BAN,OAAO,CAACuB,gBAAR,GAA2B,kBAAOC,OAAP,EAAgBC,YAAhB,EAA8BpB,kBAA9B,EAAkDC,uBAAlD,EAA2EH,eAA3E;EAAA;EAAA;IAAA;MAAA;QAAA;UACnBuB,MADmB,GACV3B,WAAW,CAAC4B,MADF;UAEnBC,MAFmB,GAEV,CAFU;UAGnBC,IAHmB,GAGZjB,WAAW,CAAC,YAAM;YACzBf,IAAI,CAACiC,aAAL,CAAmB,CAACC,KAAK,CAACH,MAAD,CAAL,CAAcZ,QAAf,EAAyBe,KAAK,CAACH,MAAD,CAAL,CAAcX,SAAvC,CAAnB,EAAsEO,OAAtE,EAA+EO,KAAK,CAACH,MAAD,CAAL,CAAcV,YAA7F,EAA2GO,YAA3G;;YACA,IAAGG,MAAM,IAAIF,MAAb,EAAoB;cAChBE,MAAM;YACT,CAFD,MAGI;cACAN,aAAa,CAACO,IAAD,CAAb;YACH;UACJ,CARqB,EAQnB,GARmB,CAHC;UAavBxB,kBAAkB,CAAC,MAAD,CAAlB;UACAC,uBAAuB,CAAC,KAAD,CAAvB;UACAH,eAAe,CAAC,KAAD,CAAf;;QAfuB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA3B"},"metadata":{},"sourceType":"script"}